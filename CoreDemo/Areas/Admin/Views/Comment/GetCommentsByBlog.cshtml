@model List<ReadCommentViewModel>

@{
    ViewBag.Title = @ViewLocalizer["Title", ViewData["CommentBlogTitle"]];
    Layout = "_AdminLayout";

    string ShrinkMessageDetail(string messageDetail)
    {
        return messageDetail.Length < 15 ? messageDetail : messageDetail.Substring(0, 15) + "...";
    }
}

<div class="wrapper wrapper-content animated fadeInRight ecommerce">
    
    <h2>@ViewLocalizer["Title",ViewData["CommentBlogTitle"]]</h2>

    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-content">

                    <table class="footable table table-stripped toggle-arrow-tiny" data-page-size="15">
                        <thead>
                            <tr>
                                <th>@ViewLocalizer["Reviewer"]</th>
                                <th>@ViewLocalizer["Comment"]</th>
                                <th>@ViewLocalizer["CreatedAt"]</th>
                                <th>@ViewLocalizer["LikeOrDislikeStatus"]</th>
                                <th>@ViewLocalizer["Processes"]</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (ReadCommentViewModel comment in Model)
                            {
                            <tr>
                                <td>
                                    @comment.UserViewModel.Username
                                </td>
                                <td>
                                    @ShrinkMessageDetail(comment.CommentAbout)
                                </td>
                                <td>
                                    @comment.CommentCreatedDate
                                </td>
                                <td>
                                    @if (comment.LikeOrDislikeStatus)
                                    {
                                    <span class="label label-primary">
                                        @ViewLocalizer["Liked"]
                                    </span>
                                    }
                                    else
                                    {
                                    <span class="label label-danger">
                                        @ViewLocalizer["Disliked"]
                                    </span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group">
                                            <a onclick="sendToastrQuestion(@comment.CommentId)" class="btn-danger text-white btn btn-xs">@ViewLocalizer["DeleteCommentButtonText"]</a>
                                            <a href="/Admin/Comment/UpdateComment/@comment.CommentId" class="btn-primary btn btn-xs text-white">@ViewLocalizer["UpdateCommentButtonText"]</a>
                                    </div>
                                </td>
                            </tr>
                            }



                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="6">
                                    <ul class="pagination float-right"></ul>
                                </td>
                            </tr>
                        </tfoot>
                    </table>

                </div>
            </div>
        </div>
    </div>


</div>
<script>


    function sendToastrQuestion(id) {
        swal("@ViewLocalizer["VerifyDeletingCommentMessage"]", {
                buttons: {
                    yes: {
                    text: "@ViewLocalizer["Yes"]",
                        value: "true",
                    },
                    no: {
                        text: "@ViewLocalizer["No"]",
                        value: "false",
                    },
                },
            })
            .then(async (value) => {

                switch (value) {
                case "true":
                        toastr.success("@ViewLocalizer["CommentSuccessfullyDeleted"]", "", {
                        "positionClass": "toast-bottom-right"
                    });
                    //Just like Thread.Sleep
                    await new Promise(resolve => setTimeout(resolve, 3000));
                    window.location.href = "/Admin/Comment/DeleteComment/" + id
                    break;
                case "false":
                    break;
                }
            });
    }
</script>