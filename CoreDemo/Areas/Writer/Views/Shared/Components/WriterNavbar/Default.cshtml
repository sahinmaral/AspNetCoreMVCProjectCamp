@model ReadUserViewModel

@inject IOptions<Microsoft.AspNetCore.Builder.RequestLocalizationOptions> LocOptions

@{
    Layout = null;

    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";

    var culture = Context.Features.Get<IRequestCultureFeature>();
    var cultureList = LocOptions.Value.SupportedUICultures.Select(x => new SelectListItem { Value = x.Name, Text = x.Name }).ToList();
}

<nav class="navbar default-layout-navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row">
    <div class="text-center navbar-brand-wrapper d-flex align-items-center justify-content-center">
        <a class="navbar-brand brand-logo" href="/Writer/Home/Homepage">
            <img src="~/writerTemplate/assets/images/logo.svg" alt="logo" />
        </a>
        <a class="navbar-brand brand-logo-mini" href="/Writer/Home/Homepage">
            <img src="~/writerTemplate/assets/images/logo-mini.svg" alt="logo" />
        </a>
    </div>
    <div class="navbar-menu-wrapper d-flex align-items-stretch">
        <button class="navbar-toggler navbar-toggler align-self-center" type="button" data-toggle="minimize">
            <span class="mdi mdi-menu"></span>
        </button>
        <div class="d-none d-sm-block">
            <form asp-action="@nameof(UserLayoutController.SetLanguage)" asp-controller="@nameof(UserLayoutController).Replace("Controller","")" method="post"
                  asp-route-returnUrl="@returnUrl" asp-area="">
                <select name="culture" class="form-control" style="height:30px; margin-top:20px"
                        asp-for="@culture.RequestCulture.UICulture.Name"
                        asp-items="cultureList"
                        onchange="this.form.submit();">
                </select>
            </form>
        </div>
        <ul class="navbar-nav navbar-nav-right">
            <li class="nav-item nav-profile dropdown">
                <a class="nav-link dropdown-toggle" id="profileDropdown" href="#" data-toggle="dropdown" aria-expanded="false">
                    <div class="nav-profile-img">
                        <img src="~/images/@Model.ImageUrl">

                        @*TODO: Meşgul , çevrimiçi veya çevrimdışı gibi özellikler eklenebilir*@
                        @*<span class="availability-status online"></span>*@
                    </div>
                    <div class="nav-profile-text">
                        <p class="mb-1 text-black">@Model.NameSurname</p>
                    </div>
                </a>
                <div class="dropdown-menu navbar-dropdown" aria-labelledby="profileDropdown">
                    <a class="dropdown-item" href="">
                        <i class="mdi mdi-cached mr-2 text-success"></i> @ViewLocalizer["Processes"]
                    </a>
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item" href="/@nameof(UserController).Replace("Controller","")/@nameof(UserController.LogOut)">
                        <i class="mdi mdi-logout mr-2 text-primary"></i> @ViewLocalizer["Logout"]
                    </a>
                </div>
            </li>
            <li class="nav-item dropdown">
                @await Component.InvokeAsync("WriterMessages")
            </li>
            <li class="nav-item dropdown">
                @await Component.InvokeAsync(typeof(CoreDemo.Areas.Writer.ViewComponents.NotificationListViewComponent))
            </li>
            <li class="nav-item nav-logout d-none d-lg-block">
                <a class="nav-link" href="/@nameof(UserController).Replace("Controller","")/@nameof(UserController.LogOut)">
                    <i class="mdi mdi-power"></i>
                </a>
            </li>
        </ul>
        <button class="navbar-toggler navbar-toggler-right d-lg-none align-self-center" type="button" data-toggle="offcanvas">
            <span class="mdi mdi-menu"></span>
        </button>
    </div>
</nav>